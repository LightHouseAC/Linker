server:
  port: 8000 # 指定启动端口
spring:
  redis:
    database: 0 # redis数据库
    host: 127.0.0.1 # redis服务器地址
    port: 6379 # redis服务器连接端口
    timeout: 5s # 连接超时时间
    lettuce:
      pool:
        max-active: 200 # 连接池最大连接数
        max-wait: -1ms # 连接池最大阻塞等待时机(-1表示没限制)
        min-idle: 0 # 连接池中的最小空闲连接
        max-idle: 10 # 连接池中的最大空闲连接
  cloud:
    gateway: # 定义网关规则
      routes:
        - id: auth # 唯一标识该路由
          uri: lb://linker-auth # Load Balancer 负载均衡，使用注册中心来实现
          predicates: # 定义匹配规则
            - Path=/auth/**
          filters: # 定义路由过滤器，去掉路径中的第一个部分: /auth/verification/code/send => /verification/code/send
            - StripPrefix=1
        - id: user
          uri: lb://linker-user
          predicates:
            - Path=/user/**
          filters:
            - StripPrefix=1

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: Authorization
  # token 前缀
  token-prefix: Bearer
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: random-128
  # 是否输出操作日志
  is-log: true